// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

import java.math.*;

class ProblemTwo{
    public static void main(String args[]){

        long f1 = 1;  //first two terms of fibonacci series are 1;
        long f2 = 1;
        long result = 0;
        long sum = 0;
        

        //Fibonacci series using Formula;
        //-------------------------------

        /*for(long i = 0; i <= target; i++){
            fib = (Math.pow((1 + Math.sqrt(5)), i) -  Math.pow((1 - Math.sqrt(5)), i)) /  (Math.pow(2, i) * Math.sqrt(5)); 
            
        }
        System.out.println((int)fib);

        */


        //Using Brute-Force Approach :

        while(result < 4000000){
            if(result % 2 == 0){
                sum = sum + result;
            }

            result = f1 + f2;
            f2 = f1;
            f1 = result;
            System.out.println(result);
        }

        System.out.println("Sum = " + sum);
       
    }
}